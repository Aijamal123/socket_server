from typing import Union


class Response:
    def __init__(self, status=200, headers={}, body=b""):
        self._status = status
        self._body = body  # type: Union[bytes, str]
        self._headers = headers

    def setStatus(self, status: int):
        """ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å """
        self._status = status

    def addHeader(self, key, value):
        """ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ """
        self._headers[key] = value

    def delHeader(self, key):
        """ –£–¥–∞–ª–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –æ—Ç–≤–µ—Ç–∞ """
        del self._headers[key]

    def setBody(self, body):
        """ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ bytes) """
        self._body = body
        self._updateContentLength()

    def _updateContentLength(self):
        """
        –ú–µ—Ç–æ–¥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ 'Content-Length' –æ–ø—Ä–µ–¥–µ–ª—è—è –¥–ª–∏–Ω—É self._body
        """
        self.addHeader(
            "Content-Length",
            len(self._body.encode() if type(self._body) == str else self._body),
        )

    def _getHeaders(self) -> str:
        """
        –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É —Å–æ–¥–µ—Ä–∂–∞—â—É—é:
        - —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
        - –∑–∞–≥–æ–ª–æ–≤–∫–∏
        """
        http_headers_string = f"HTTP/1.1 {self._status} OK\n"
        for key, value in self._headers.items():
            http_headers_string += f"{key}: {value}\n"
        return http_headers_string

    def encode(self) -> bytes:
        """
        –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞ –≤ bytes –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ —Å–µ—Ç–∏
        """
        self._updateContentLength()
        http_response_bytes = self._getHeaders().encode()
        if self._body:
            http_response_bytes += b"\r\n"
            http_response_bytes += (
                #      üëá - –≤ —Å–ª—É—á–∞–µ –∫–æ–≥–¥–∞ self.body ‚Äì —Å—Ç—Ä–æ–∫–∞
                self._body.encode()
                if isinstance(self._body, str)
                #      üëá - self.body ‚Äì bytes
                else self._body
            )
        return http_response_bytes


class TextResponse(Response):
    """ –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Å Content-Type 'text/plain' """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.addHeader("Content-Type", "text/plain; charset=UTF-8")


class HtmlResponse(Response):
    """ –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Å Content-Type 'text/html' """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.addHeader("Content-Type", "text/html; charset=UTF-8")


class JsonResponse(Response):
    """ –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Å Content-Type 'application/json' """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.addHeader("Content-Type", "application/json; charset=UTF-8")
